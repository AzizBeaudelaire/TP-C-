# Projet Todo Web API C# .NET

Ce projet est une application Web API destinée à la gestion des tâches (todos). Elle utilise ASP.NET Core avec Entity Framework Core pour interagir avec une base de données. Le projet est conçu pour fournir des fonctionnalités de gestion des tâches, des étiquettes et des priorités.

## Configuration

### Base de données

Le projet utilise Entity Framework Core pour la gestion de la base de données. Assurez-vous de configurer correctement la chaîne de connexion dans le fichier `appsettings.json` :

```json
"ConnectionStrings": {
  "DefaultConnection": "Data Source=mydatabase.db"
}


Migration de la base de données
Pour créer et appliquer les migrations initiales, utilisez les commandes suivantes dans la console du Gestionnaire de packages NuGet (PMC) ou la CLI .NET :

bash
Copy code
dotnet ef migrations add InitialMigration
dotnet ef database update
Exécution du projet
Assurez-vous que votre environnement de développement est correctement configuré avec .NET Core SDK. Exécutez le projet avec la commande suivante :

bash
Copy code
dotnet run
L'API sera accessible à l'adresse suivante : https://localhost:5001

Fonctionnalités
BoardController
GET /board/TaskBoard: Récupère la liste des tâches triées par priorité.
GET /board/SearchTasks?keyword={keyword}: Recherche des tâches par mot-clé.
PATCH /board/Set-as-done/{id}: Marque une tâche comme terminée.
POST /board/AddTagToTask/{taskId}: Ajoute une étiquette à une tâche.
TodoController
GET /todo/TodoBoard: Récupère la liste complète des tâches.
GET /todo/Search/{id}: Recherche une tâche par ID.
POST /todo/Add-a-task: Ajoute une nouvelle tâche.
PUT /todo/Update-a-task/{taskId}: Met à jour une tâche existante.
DELETE /todo/Delete-a-task/{taskId}: Supprime une tâche.
TagController
GET /tag/GetAllTags: Récupère la liste complète des étiquettes.
GET /tag/GetTagById/{tagId}: Récupère une étiquette par ID.
POST /tag/AddTag: Ajoute une nouvelle étiquette.
PUT /tag/UpdateTag/{tagId}: Met à jour une étiquette existante.
DELETE /tag/DeleteTag/{tagId}: Supprime une étiquette.
PriorityController
GET /priority/GetAllPriorities: Récupère la liste complète des priorités.
GET /priority/GetPriorityById/{priorityId}: Récupère une priorité par ID.
POST /priority/AddPriority: Ajoute une nouvelle priorité.
PUT /priority/UpdatePriority/{priorityId}: Met à jour une priorité existante.
DELETE /priority/DeletePriority/{priorityId}: Supprime une priorité.
